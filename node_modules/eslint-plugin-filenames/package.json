{
  "_args": [
    [
      {
        "raw": "eslint-plugin-filenames@^1.1.0",
        "scope": null,
        "escapedName": "eslint-plugin-filenames",
        "name": "eslint-plugin-filenames",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "/Users/maddiehuish/Projects/typeahead-exercise"
    ]
  ],
  "_from": "eslint-plugin-filenames@>=1.1.0 <2.0.0",
  "_id": "eslint-plugin-filenames@1.1.0",
  "_inCache": true,
  "_location": "/eslint-plugin-filenames",
  "_nodeVersion": "6.3.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/eslint-plugin-filenames-1.1.0.tgz_1468946057732_0.6380134765058756"
  },
  "_npmUser": {
    "name": "selaux",
    "email": "github@stefanlau.com"
  },
  "_npmVersion": "3.10.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "eslint-plugin-filenames@^1.1.0",
    "scope": null,
    "escapedName": "eslint-plugin-filenames",
    "name": "eslint-plugin-filenames",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/eslint-plugin-filenames/-/eslint-plugin-filenames-1.1.0.tgz",
  "_shasum": "bb925218ab25b1aad1c622cfa9cb8f43cc03a4ff",
  "_shrinkwrap": null,
  "_spec": "eslint-plugin-filenames@^1.1.0",
  "_where": "/Users/maddiehuish/Projects/typeahead-exercise",
  "author": {
    "name": "Stefan Lau",
    "email": "github@stefanlau.com"
  },
  "bugs": {
    "url": "https://github.com/selaux/eslint-plugin-filenames/issues"
  },
  "dependencies": {
    "lodash.camelcase": "4.1.1",
    "lodash.kebabcase": "4.0.1",
    "lodash.snakecase": "4.0.1"
  },
  "description": "Eslint rule for consistent filenames.",
  "devDependencies": {
    "chai": "3.5.0",
    "coveralls": "2.11.7",
    "eslint": "^2.0.0",
    "eslint-plugin-filenames": "^1.0.0",
    "istanbul": "0.4.3",
    "mocha": "2.4.5",
    "sinon": "1.17.4"
  },
  "directories": {},
  "dist": {
    "shasum": "bb925218ab25b1aad1c622cfa9cb8f43cc03a4ff",
    "tarball": "https://registry.npmjs.org/eslint-plugin-filenames/-/eslint-plugin-filenames-1.1.0.tgz"
  },
  "gitHead": "1e6e5a2d2107fde65659882a7c71cdd85c80cc70",
  "homepage": "https://github.com/selaux/eslint-plugin-filenames",
  "keywords": [
    "eslint",
    "eslintplugin",
    "eslint-plugin",
    "file",
    "filename",
    "path"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "selaux",
      "email": "github@stefanlau.com"
    }
  ],
  "name": "eslint-plugin-filenames",
  "optionalDependencies": {},
  "peerDependencies": {
    "eslint": "*"
  },
  "readme": "# eslint-plugin-filenames\n\n[![NPM Version](https://img.shields.io/npm/v/eslint-plugin-filenames.svg?style=flat-square)](https://www.npmjs.org/package/eslint-plugin-filenames)\n[![Build Status](https://img.shields.io/travis/selaux/eslint-plugin-filenames.svg?style=flat-square)](https://travis-ci.org/selaux/eslint-plugin-filenames)\n[![Coverage Status](https://img.shields.io/coveralls/selaux/eslint-plugin-filenames.svg?style=flat-square)](https://coveralls.io/r/selaux/eslint-plugin-filenames?branch=master)\n[![Dependencies](https://img.shields.io/david/selaux/eslint-plugin-filenames.svg?style=flat-square)](https://david-dm.org/selaux/eslint-plugin-filenames)\n\nAdds [eslint](http://eslint.org/) rules to ensure consistent filenames for your javascript files.\n\n__Please note__: This plugin will only lint the filenames of the `.js`-files you are linting with eslint. It will ignore all other files (e.g. non-js files, files not linted with eslint).\n\n## Enabling the plugin\n\nThis plugin requires a version of `eslint>=1.0.0` to be installed as a peer dependency.\n\nModify your `.eslintrc` file to load the plugin and enable the rules you want to use.\n\n```json\n{\n  \"plugins\": [\n    \"filenames\"\n  ],\n  \"rules\": {\n    \"filenames/match-regex\": 2,\n    \"filenames/match-exported\": 2,\n    \"filenames/no-index\": 2\n  }\n}\n```\n\n## Rules\n\n### Consistent Filenames via regex (match-regex)\n\nA rule to enforce a certain file naming convention using a regular expression.\n\nThe convention can be configured using a regular expression (the default is `camelCase.js`). Additionally\nexporting files can be ignored with a second configuration parameter.\n\n```json\n\"filenames/match-regex\": [2, \"^[a-z_]+$\", true]\n```\n\nWith these configuration options, `camelCase.js` will be reported as an error while `snake_case.js` will pass.\nAdditionally the files that have a named default export (according to the logic in the `match-exported` rule) will be\nignored.  They could be linted with the `match-exported` rule.\n\n### Matching Exported Values (match-exported)\n\nMatch the file name against the default exported value in the module. Files that dont have a default export will\nbe ignored. The exports of `index.js` are matched against their parent directory.\n\n```js\n// Considered problem only if the file isn't named foo.js or foo/index.js\nexport default function foo() {}\n\n// Considered problem only if the file isn't named Foo.js or Foo/index.js\nmodule.exports = class Foo() {}\n\n// Considered problem only if the file isn't named someVariable.js or someVariable/index.js\nmodule.exports = someVariable;\n\n// Never considered a problem\nexport default { foo: \"bar\" };\n```\n\nIf your filename policy doesn't quite match with your variable naming policy, you can add a tansform:\n\n```json\n\"filenames/match-exported\": [2, \"kebab\"]\n```\n\nNow, in your code:\n\n```js\n// Considered problem only if file isn't named variable-name.js or variable-name/index.js\nexport default function variableName;\n```\n\nAvailable transforms:\n'[snake](https://www.npmjs.com/package/lodash.snakecase)',\n'[kebab](https://www.npmjs.com/package/lodash.kebabcase)', and\n'[camel](https://www.npmjs.com/package/lodash.camelcase)'\n\n### Don't allow index.js files (no-index)\n\nHaving a bunch of `index.js` files can have negative influence on developer experience, e.g. when\nopening files by name. When enabling this rule. `index.js` files will always be considered a problem.\n\n## Changelog\n\n#### 1.1.0\n- Introduce `transform` option for `match-exported`\n\n#### 1.0.0\n- Split rule into `match-regex`, `match-exported` and `no-index`\n\n#### 0.2.0\n- Add match-exported flags\n\n#### 0.1.2\n- Fix example in README\n\n#### 0.1.1\n- Fix: Text via stdin always passes\n- Tests: Travis builds also run on node 0.12 and iojs now\n\n#### 0.1.0\n- Initial Release\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/selaux/eslint-plugin-filenames.git"
  },
  "scripts": {
    "check-coverage": "istanbul check-coverage --statement 100 --branch 100 --function 100 --lines 100",
    "coveralls": "cat ./build/coverage/lcov.info | coveralls",
    "lint": "eslint .",
    "report-coverage-html": "istanbul report --dir  build/coverage html",
    "test": "npm run lint && npm run unit-test --coverage && npm run check-coverage",
    "unit-test": "istanbul test --dir build/coverage _mocha test -- --recursive --reporter dot"
  },
  "version": "1.1.0"
}
